<?xml version="1.0" encoding="utf-8"?><RuleML xmlns="http://www.ruleml.org/1.0/xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.ruleml.org/1.0/xsd http://www.ruleml.org/1.0/xsd/hornlogeq.xsd">







<!-- a trivial example rulebase for testing the Equalog RuleML sublanguage --><content><Assert mapClosure="universal">








	






	
	






      
 
     
 
     

    

    


<formula><Forall>
    
    
<declare><Var>d</Var></declare><formula><Equal>
      
      
    <Ind>some constant</Ind><Var>d</Var></Equal></formula></Forall></formula><!-- begin new --><formula><Equivalent>
		
		
	<torso>
			<Equal>
			  
			  
			<Expr>
			    <Fun per="value">f</Fun>
				<Var>x</Var>
			  </Expr><right><Ind>1</Ind></right></Equal>
		</torso><torso>
			<Equal>
			  
			  
			<Expr>
			    <Fun per="value">g</Fun>
				<Var>x</Var>
			  </Expr><right><Ind>2</Ind></right></Equal>
		</torso></Equivalent></formula><formula><Implies>
	


		
	


	


		
<!-- this is a testing equation (in the body) --><then><Equal>
			
			
		<left>
				<Expr>
					 
					
				<op><Fun per="copy">age</Fun></op><arg index="1"><Expr>
						 
						
						
					<op><Fun per="copy">first-born</Fun></op><arg index="1"><Ind>John</Ind></arg><arg index="2"><Ind>Mary</Ind></arg></Expr></arg></Expr>
			</left><right>
				
<!-- only passive can be nested within passive -->

				<Expr>
					
					
					
				<op><Fun per="copy">subtract</Fun></op><arg index="1"><Expr>
						 


						
					<op><Fun per="value">this-year</Fun></op><!-- must be "no" --><arg index="1">
							<Expr>
								 


							<op><Fun per="copy">this-year</Fun></op><!-- must be "no" --></Expr>
						</arg></Expr></arg><arg index="2"><Ind>1993</Ind></arg></Expr>
			</right></Equal></then><!-- this is a defining equation (in the head) --><!-- so the toplevel function of the lhs must be interpreted --><Equal>
			<left>
				
			<Expr>
					 


					
				<op><Fun per="value">age</Fun></op><!-- must be "yes" --><arg index="1"><Expr>
						 
						
						
					<op><Fun per="value">first-born</Fun></op><arg index="1"><Ind>John</Ind></arg><arg index="2"><Ind>Mary</Ind></arg></Expr></arg></Expr></left>
			<right>
				
			<Expr>
					
					
				<op><Fun per="copy">a</Fun></op><arg index="1"><Ind>1</Ind></arg></Expr></right>
		</Equal></Implies></formula><!-- end new --><formula><Equivalent>
    
    
<torso><Equal>
      
      
    <Ind>some constant</Ind><Var>d</Var></Equal></torso><torso><Equal>
      
      
    <Ind>some constant</Ind><Var>e</Var></Equal></torso></Equivalent></formula><formula><Implies>
  
  
<if>
    
  
    <And>
    
    <formula><Atom>
      
      
      
      
      
      
      
    <op><Rel>friend</Rel></op><arg index="1"><Ind>Jane</Ind></arg><arg index="2"><Ind>Joan</Ind></arg><arg index="3"><Ind>Jack</Ind></arg><arg index="4"><Var>y</Var></arg><arg index="5"><Ind>Frank</Ind></arg><slot><Ind>yar</Ind><Expr>
          
          
        <op><Fun>constructor</Fun></op><arg index="1"><Plex>
            
            
          
            <Var>z</Var>
            <slot><Ind>yar2</Ind><Ind>c</Ind></slot>
          </Plex></arg></Expr></slot></Atom></formula></And>
  </if><then>
     
  
     <Atom>
      
      
      
      
      
     <op><Rel>friend</Rel></op><slot><Ind>t</Ind><Ind>b</Ind></slot><arg index="1"><Var>x</Var></arg><arg index="2"><Var>y</Var></arg><arg index="3"><Ind>Steph</Ind></arg></Atom>
  </then></Implies></formula><formula><Atom>
        
        
        
        
        
      <op><Rel>some relation</Rel></op><slot><Ind>role_name1</Ind><Ind>role 1</Ind></slot><arg index="1"><Ind>constant a</Ind></arg><arg index="2"><Ind>constant b</Ind></arg><slot><Ind>role_name2</Ind><Ind>role 2</Ind></slot></Atom></formula><formula><Atom>
        
        
        
        
      <op><Rel>another relation</Rel></op><arg index="1"><Ind>constant c</Ind></arg><arg index="2"><Ind>constant d</Ind></arg><Expr>
          <op><Fun>yac</Fun></op>
            <Ind>constant g</Ind>
            <Ind>constant h</Ind>
            <Expr>
              
            <op><Fun>empty</Fun></op></Expr>
            <Ind>constant h</Ind>
        </Expr></Atom></formula><formula><Equal>
        
        
      <left><Expr>
          
          
          
          
        <op><Fun per="value">some function</Fun></op><arg index="1"><Ind>arg1</Ind></arg><arg index="2"><Ind>arg2</Ind></arg><arg index="3"><Ind>arg3</Ind></arg></Expr></left><right><Expr>
          
          
          
          
        <op><Fun per="value">some other function</Fun></op><arg index="1"><Ind>arg4</Ind></arg><arg index="2"><Ind>arg5</Ind></arg><arg index="3"><Ind>arg6</Ind></arg></Expr></right></Equal></formula><formula><Atom>
      
      
      
      
    <op><Rel>yet another relation</Rel></op><arg index="1"><Ind>constant e</Ind></arg><arg index="2"><Ind>constant b</Ind></arg><slot><Ind>role_name3</Ind><Ind>role 3</Ind></slot></Atom></formula><formula><Equal>
      
      
    <Ind>some constant</Ind><Var>d</Var></Equal></formula></Assert></content></RuleML>