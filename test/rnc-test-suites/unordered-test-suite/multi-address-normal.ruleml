<?xml version="1.0" encoding="UTF-8"?>
<RuleML xmlns="http://ruleml.org/spec" xmlns:sorts="http://example.org/ontology#" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <!-- dc:rights [ 'Copyright 2015 RuleML Inc. - Licensed under the RuleML Specification License, Version 1.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://ruleml.org/licensing/RSL1.0-RuleML. Disclaimer: THIS SPECIFICATION IS PROVIDED "AS IS" AND ANY EXPRESSED OR IMPLIED WARRANTIES, ..., EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. See the License for the specifics governing permissions and limitations under the License.' ]-->
  <!--A personX has multi-addresses if the personX lives at address1 and address2 and we can prove (using the built-in relation lessThan over strings) that the two addresses are different.
    Compare to ../../../../exa/NegationDatalog/nafdatalog/multi-address.ruleml where this rule is expressed in an equivalent fashion using Negation as failure.-->
  <act index="1">
    <Assert mapClosure="universal">
      <!--Jack lives at 655 Graham Avenue -->
      <!--Jack lives at 552 Windsor -->
      <formula>
        <Implies>
          <if>
            <And>
              <formula index="1">
                <Atom>
                  <op><Rel>address</Rel></op>
                  <arg index="1"><Var>personX</Var></arg>
                  <arg index="2"><Var type="sorts:String">address1</Var></arg>
                </Atom>
              </formula>
              <formula index="2">
                <Atom>
                  <op><Rel>address</Rel></op>
                  <arg index="1"><Var>personX</Var></arg>
                  <arg index="2"><Var type="sorts:String">address2</Var></arg>
                </Atom>
              </formula>
              <formula index="3">
                <Atom>
                  <op><Rel>lessThan</Rel></op>
                  <arg index="1"><Var type="sorts:String">address1</Var></arg>
                  <arg index="2"><Var type="sorts:String">address2</Var></arg>
                </Atom>
              </formula>
            </And>
          </if>
          <then>
            <Atom>
              <op><Rel>multi-address</Rel></op>
              <arg index="1"><Var>personX</Var></arg>
            </Atom>
          </then>
        </Implies>
      </formula>
      <formula>
        <Atom>
          <op><Rel>address</Rel></op>
          <arg index="1"><Ind>Jack</Ind></arg>
          <arg index="2"><Ind type="sorts:String">655 Graham Avenue</Ind></arg>
        </Atom>
      </formula>
      <formula>
        <Atom>
          <op><Rel>address</Rel></op>
          <arg index="1"><Ind>Jack</Ind></arg>
          <arg index="2"><Ind type="sorts:String">552 Windsor</Ind></arg>
        </Atom>
      </formula>
    </Assert>
  </act>
</RuleML>