<?xml version="1.0" encoding="UTF-8"?>
<RuleML xmlns="http://ruleml.org/spec" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <!-- dc:rights [ 'Copyright 2015 RuleML Inc. - Licensed under the RuleML Specification License, Version 1.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://ruleml.org/licensing/RSL1.0-RuleML. Disclaimer: THIS SPECIFICATION IS PROVIDED "AS IS" AND ANY EXPRESSED OR IMPLIED WARRANTIES, ..., EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. See the License for the specifics governing permissions and limitations under the License.' ]-->
  <!-- This suite of examples about constants deals with the RuleML counterparts to synonyms and homonyms in natural languages.
       The syntax of local symbols permits to introduce short constant names.
       The semantics of local symbols permits to merge documents while avoiding name clashs, as in W3C RDF and RIF.
       A constant consisting of either a local symbol or a global IRI ('webizing') corresponds to rif:local and rif:iri in W3C RIF.
       A constant consisting of both a local symbol and a global IRI can explicitly represent any synonymy or homonymy of the symbol via the IRI.
       When different local symbols are associated with one global IRI, the shared IRI establishes their synonymy.
       When one local symbol is associated with different global IRIs, the various IRIs disambiguate its homonymy.
       The suite systematically varies three kinds of constant (symbol vs. IRI vs. combined) with two kinds of performatives (Assert vs. Query).
       Its predicted Query results serve to constrain the semantics of possibly 'webized' unary predicate constants.
       A similar systematics should also be attempted for types, n-ary predicates/functions, individuals, etc. -->
  <act index="1">
    <Assert mapClosure="universal">
      <!-- Synonyms: local (unary) predicate symbols -->
      <formula>
        <Atom>
          <op><Rel>car</Rel></op>
          <arg index="1"><Ind>enty1</Ind></arg>
        </Atom>
      </formula>
      <formula>
        <Atom>
          <op><Rel>auto</Rel></op>
          <arg index="1"><Ind>enty2</Ind></arg>
        </Atom>
      </formula>
    </Assert>
  </act>
  <act index="2">
    <Query>
      <!-- Query for entities that are cars will retrieve enty1 -->
      <formula>
        <Atom>
          <op><Rel>car</Rel></op>
          <arg index="1"><Var>?X</Var></arg>
        </Atom>
      </formula>
    </Query>
  </act>
  <act index="3">
    <Query>
      <!-- Query for entities that are autos will retrieve enty2 -->
      <formula>
        <Atom>
          <op><Rel>auto</Rel></op>
          <arg index="1"><Var>?X</Var></arg>
        </Atom>
      </formula>
    </Query>
  </act>
  <act index="4">
    <Query>
      <!-- Query for enty1 being an auto will fail -->
      <formula>
        <Atom>
          <op><Rel>auto</Rel></op>
          <arg index="1"><Ind>enty1</Ind></arg>
        </Atom>
      </formula>
    </Query>
  </act>
  <act index="5">
    <Query>
      <!-- Query for enty2 being a car will fail -->
      <formula>
        <Atom>
          <op><Rel>car</Rel></op>
          <arg index="1"><Ind>enty2</Ind></arg>
        </Atom>
      </formula>
    </Query>
  </act>
  <act index="6">
    <Query>
      <!-- Query for entities that are cars, associated with a global IRI, will fail -->
      <formula>
        <Atom>
          <op><Rel iri="http://example.org/vehicle#automobile">car</Rel></op>
          <arg index="1"><Var>?X</Var></arg>
        </Atom>
      </formula>
    </Query>
  </act>
  <act index="7">
    <Query>
      <!-- Query for entities that are autos, associated with a global IRI, will fail -->
      <formula>
        <Atom>
          <op><Rel iri="http://example.org/vehicle#automobile">auto</Rel></op>
          <arg index="1"><Var>?X</Var></arg>
        </Atom>
      </formula>
    </Query>
  </act>
  <act index="8">
    <Assert mapClosure="universal">
      <!-- Synonyms: local (unary) predicate symbols identified through identical global IRI -->
      <formula>
        <Atom>
          <op><Rel iri="http://example.org/vehicle#automobile">car</Rel></op>
          <arg index="1"><Ind>enty3</Ind></arg>
        </Atom>
      </formula>
      <formula>
        <Atom>
          <op><Rel iri="http://example.org/vehicle#automobile">auto</Rel></op>
          <arg index="1"><Ind>enty4</Ind></arg>
        </Atom>
      </formula>
    </Assert>
  </act>
  <act index="9">
    <Query>
      <!-- Query for entities identified through IRI .../vehicle#automobile, keeping symbol car, will retrieve enty3 -->
      <formula>
        <Atom>
          <op><Rel iri="http://example.org/vehicle#automobile">car</Rel></op>
          <arg index="1"><Var>?X</Var></arg>
        </Atom>
      </formula>
    </Query>
  </act>
  <act index="10">
    <Query>
      <!-- Query for entities identified through IRI .../vehicle#automobile, keeping symbol auto, will retrieve enty4 -->
      <formula>
        <Atom>
          <op><Rel iri="http://example.org/vehicle#automobile">auto</Rel></op>
          <arg index="1"><Var>?X</Var></arg>
        </Atom>
      </formula>
    </Query>
  </act>
  <act index="11">
    <Query>
      <!-- Query for entities identified through IRI .../vehicle#automobile, omitting symbols car and auto, will retrieve enty3 and enty4 -->
      <formula>
        <Atom>
          <op><Rel iri="http://example.org/vehicle#automobile"/></op>
          <arg index="1"><Var>?X</Var></arg>
        </Atom>
      </formula>
    </Query>
  </act>
  <act index="12">
    <Query>
      <!-- Query for entities that are cars, omitting IRI, will retrieve enty1 and enty3 -->
      <formula>
        <Atom>
          <op><Rel>car</Rel></op>
          <arg index="1"><Var>?X</Var></arg>
        </Atom>
      </formula>
    </Query>
  </act>
  <act index="13">
    <Query>
      <!-- Query for entities that are autos, omitting IRI, will retrieve enty2 and enty4 -->
      <formula>
        <Atom>
          <op><Rel>auto</Rel></op>
          <arg index="1"><Var>?X</Var></arg>
        </Atom>
      </formula>
    </Query>
  </act>
  <act index="14">
    <Assert mapClosure="universal">
      <!-- Synonyms: (unary) predicates as identical global IRI -->
      <formula>
        <Atom>
          <op><Rel iri="http://example.org/vehicle#automobile"/></op>
          <arg index="1"><Ind>enty5</Ind></arg>
        </Atom>
      </formula>
      <formula>
        <Atom>
          <op><Rel iri="http://example.org/vehicle#automobile"/></op>
          <arg index="1"><Ind>enty6</Ind></arg>
        </Atom>
      </formula>
    </Assert>
  </act>
  <act index="15">
    <Query>
      <!-- Query for entities identified through IRI .../vehicle#automobile will retrieve enty3 to enty6 -->
      <formula>
        <Atom>
          <op><Rel iri="http://example.org/vehicle#automobile"/></op>
          <arg index="1"><Var>?X</Var></arg>
        </Atom>
      </formula>
    </Query>
  </act>
  <act index="16">
    <Query>
      <!-- Query for entities identified through IRI .../vehicle#automobile, keeping symbol car, will retrieve enty3 -->
      <formula>
        <Atom>
          <op><Rel iri="http://example.org/vehicle#automobile">car</Rel></op>
          <arg index="1"><Var>?X</Var></arg>
        </Atom>
      </formula>
    </Query>
  </act>
  <act index="17">
    <Query>
      <!-- Query for entities identified through IRI .../vehicle#automobile, keeping symbol auto, will retrieve enty4 -->
      <formula>
        <Atom>
          <op><Rel iri="http://example.org/vehicle#automobile">auto</Rel></op>
          <arg index="1"><Var>?X</Var></arg>
        </Atom>
      </formula>
    </Query>
  </act>
  <act index="18">
    <Assert mapClosure="universal">
      <!-- Homonyms: local (unary) predicate symbols -->
      <formula>
        <Atom>
          <op><Rel>bank</Rel></op>
          <arg index="1"><Ind>thng1</Ind></arg>
        </Atom>
      </formula>
      <formula>
        <Atom>
          <op><Rel>bank</Rel></op>
          <arg index="1"><Ind>thng2</Ind></arg>
        </Atom>
      </formula>
    </Assert>
  </act>
  <act index="19">
    <Query>
      <!-- Query for things that are banks will retrieve thng1 and thng2 -->
      <formula>
        <Atom>
          <op><Rel>bank</Rel></op>
          <arg index="1"><Var>?X</Var></arg>
        </Atom>
      </formula>
    </Query>
  </act>
  <act index="20">
    <Query>
      <!-- Query for thng1 being a bank will succeed -->
      <formula>
        <Atom>
          <op><Rel>bank</Rel></op>
          <arg index="1"><Ind>thng1</Ind></arg>
        </Atom>
      </formula>
    </Query>
  </act>
  <act index="21">
    <Query>
      <!-- Query for thng2 being a bank will succeed -->
      <formula>
        <Atom>
          <op><Rel>bank</Rel></op>
          <arg index="1"><Ind>thng2</Ind></arg>
        </Atom>
      </formula>
    </Query>
  </act>
  <act index="22">
    <Query>
      <!-- Query for symbol bank, associated with IRI .../geography#riverbank, will fail -->
      <formula>
        <Atom>
          <op><Rel iri="http://example.org/geography#riverbank">bank</Rel></op>
          <arg index="1"><Var>?X</Var></arg>
        </Atom>
      </formula>
    </Query>
  </act>
  <act index="23">
    <Query>
      <!-- Query for symbol bank, associated with IRI .../finance#savingsbank, will fail -->
      <formula>
        <Atom>
          <op><Rel iri="http://example.org/financial#savingsbank">bank</Rel></op>
          <arg index="1"><Var>?X</Var></arg>
        </Atom>
      </formula>
    </Query>
  </act>
  <act index="24">
    <Assert mapClosure="universal">
      <!-- Homonyms: local (unary) predicate symbols differentiated through different global IRIs -->
      <formula>
        <Atom>
          <op><Rel iri="http://example.org/geography#riverbank">bank</Rel></op>
          <arg index="1"><Ind>thng3</Ind></arg>
        </Atom>
      </formula>
      <formula>
        <Atom>
          <op><Rel iri="http://example.org/financial#savingsbank">bank</Rel></op>
          <arg index="1"><Ind>thng4</Ind></arg>
        </Atom>
      </formula>
    </Assert>
  </act>
  <act index="25">
    <Query>
      <!-- Query for things identified through IRI .../geography#riverbank, keeping symbol bank, will retrieve thng3 -->
      <formula>
        <Atom>
          <op><Rel iri="http://example.org/geography#riverbank">bank</Rel></op>
          <arg index="1"><Var>?X</Var></arg>
        </Atom>
      </formula>
    </Query>
  </act>
  <act index="26">
    <Query>
      <!-- Query for things identified through IRI .../finance#savingsbank, keeping symbol bank, will retrieve thng4 -->
      <formula>
        <Atom>
          <op><Rel iri="http://example.org/financial#savingsbank">bank</Rel></op>
          <arg index="1"><Var>?X</Var></arg>
        </Atom>
      </formula>
    </Query>
  </act>
  <act index="27">
    <Query>
      <!-- Query for things identified through IRI .../geography#riverbank, omitting symbol bank, will retrieve thng3 -->
      <formula>
        <Atom>
          <op><Rel iri="http://example.org/geography#riverbank"/></op>
          <arg index="1"><Var>?X</Var></arg>
        </Atom>
      </formula>
    </Query>
  </act>
  <act index="28">
    <Query>
      <!-- Query for things identified through IRI .../finance#savingsbank, omitting symbol bank, will retrieve thng4 -->
      <formula>
        <Atom>
          <op><Rel iri="http://example.org/financial#savingsbank"/></op>
          <arg index="1"><Var>?X</Var></arg>
        </Atom>
      </formula>
    </Query>
  </act>
  <act index="29">
    <Assert mapClosure="universal">
      <!-- Homonyms: local (unary) predicates as different global IRIs -->
      <formula>
        <Atom>
          <op><Rel iri="http://example.org/geography#riverbank"/></op>
          <arg index="1"><Ind>thng5</Ind></arg>
        </Atom>
      </formula>
      <formula>
        <Atom>
          <op><Rel iri="http://example.org/financial#savingsbank"/></op>
          <arg index="1"><Ind>thng6</Ind></arg>
        </Atom>
      </formula>
    </Assert>
  </act>
  <act index="30">
    <Query>
      <!-- Query for things identified through IRI .../geography#riverbank will retrieve thng3 and thng5 -->
      <formula>
        <Atom>
          <op><Rel iri="http://example.org/geography#riverbank"/></op>
          <arg index="1"><Var>?X</Var></arg>
        </Atom>
      </formula>
    </Query>
  </act>
  <act index="31">
    <Query>
      <!-- Query for things identified through IRI .../finance#savingsbank will retrieve thng4 and thng6 -->
      <formula>
        <Atom>
          <op><Rel iri="http://example.org/financial#savingsbank"/></op>
          <arg index="1"><Var>?X</Var></arg>
        </Atom>
      </formula>
    </Query>
  </act>
  <act index="32">
    <Assert mapClosure="universal">
      <!-- Homonyms: local (unary) predicate symbols, the second occurrence disambiguated through global IRI -->
      <formula>
        <Atom>
          <op><Rel>bank</Rel></op>
          <arg index="1"><Ind>thng7</Ind></arg>
        </Atom>
      </formula>
      <formula>
        <Atom>
          <op><Rel iri="http://example.org/financial#savingsbank">bank</Rel></op>
          <arg index="1"><Ind>thng8</Ind></arg>
        </Atom>
      </formula>
    </Assert>
  </act>
  <act index="33">
    <Query>
      <!-- Query for things that are banks will retrieve thng1 to thng4 as well as thng7 and thng8 -->
      <formula>
        <Atom>
          <op><Rel>bank</Rel></op>
          <arg index="1"><Var>?X</Var></arg>
        </Atom>
      </formula>
    </Query>
  </act>
  <act index="34">
    <Query>
      <!-- Query for things identified through IRI .../geography#riverbank, keeping symbol bank, will retrieve thng3 -->
      <formula>
        <Atom>
          <op><Rel iri="http://example.org/geography#riverbank">bank</Rel></op>
          <arg index="1"><Var>?X</Var></arg>
        </Atom>
      </formula>
    </Query>
  </act>
  <act index="35">
    <Query>
      <!-- Query for things identified through IRI .../finance#savingsbank, keeping symbol bank, will retrieve thng4 as well as thng8 -->
      <formula>
        <Atom>
          <op><Rel iri="http://example.org/financial#savingsbank">bank</Rel></op>
          <arg index="1"><Var>?X</Var></arg>
        </Atom>
      </formula>
    </Query>
  </act>
  <act index="36">
    <Query>
      <!-- Query for things identified through IRI .../geography#riverbank, omitting symbol bank, will retrieve thng3 and thng5 -->
      <formula>
        <Atom>
          <op><Rel iri="http://example.org/geography#riverbank"/></op>
          <arg index="1"><Var>?X</Var></arg>
        </Atom>
      </formula>
    </Query>
  </act>
  <act index="37">
    <Query>
      <!-- Query for things identified through IRI .../finance#savingsbank, omitting symbol bank, will retrieve thng4 and thng6 as well as thng8 -->
      <formula>
        <Atom>
          <op><Rel iri="http://example.org/financial#savingsbank"/></op>
          <arg index="1"><Var>?X</Var></arg>
        </Atom>
      </formula>
    </Query>
  </act>
</RuleML>