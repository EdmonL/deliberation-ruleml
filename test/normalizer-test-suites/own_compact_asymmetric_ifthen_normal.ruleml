<?xml version="1.0" encoding="UTF-8"?>
<RuleML xmlns="http://ruleml.org/spec" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!-- start XML comment ...

Note: This is a compact (i.e. minimally-roled) version of this example,
except in the first implication the premise and conclusion are switched.
For validity against the XSD schemas, neither stripe would not be allowed to be skipped in this case.
However, the relaxed serialization implemented in the Relax NG schemas is more permissive,
and would allow one or the other of the stripes to be skipped, but not both.

This example rulebase contains four rules.
The first and second rules are implications; the third and fourth ones are facts.

In English:

The first rule implies that a person owns an object
if that person buys the object from a merchant and the person keeps the object.

As an OrdLab Tree:

Implies~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          |                         |
          |                         |
          |                         |
        Atom~~~~~~~~~~~~~~~~~~     And~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                 |     |     |           |                                   |
                 |     |     |           |                                   |
                 |     |     |           |                                   |        
                Rel   Var   Var        Atom~~~~~~~~~~~~~~~~~~~~~~~~~~~     Atom~~~~~~~~~~~~~~~~~~
                 .     .     .                  |     |      |       |              |     |     |
                 .     .     .                  |     |      |       |              |     |     |
                 .     .     .                  |     |      |       |              |     |     |
                own  person object             Rel   Var    Var     Var            Rel   Var   Var
                                                .     .      .       .              .     .     . 
                                                .     .      .       .              .     .     .
                                                .     .      .       .              .     .     .
                                               buy  person merchant object        keep  person object

... end XML comment -->
  <act index="1">
    <Assert mapMaterial="yes" mapDirection="bidirectional" mapClosure="universal">
      <formula>
        <Implies material="yes" direction="bidirectional">
          <if>
            <And>
              <!-- explicit 'And' -->
              <formula>
                <Atom>
                  <op><Rel>buy</Rel></op>
                  <arg index="1"><Var>person</Var></arg>
                  <arg index="2"><Var>merchant</Var></arg>
                  <arg index="3"><Var>object</Var></arg>
                </Atom>
              </formula>
              <formula>
                <Atom>
                  <op><Rel>keep</Rel></op>
                  <arg index="1"><Var>person</Var></arg>
                  <arg index="2"><Var>object</Var></arg>
                </Atom>
              </formula>
            </And>
          </if>
          <then>
            <Atom>
              <op><Rel>own</Rel></op>
              <arg index="1"><Var>person</Var></arg>
              <arg index="2"><Var>object</Var></arg>
            </Atom>
          </then>
        </Implies>
      </formula>
      <formula>
        <Implies material="yes" direction="bidirectional">
          <!-- The second rule implies that a person buys an object from a merchant
if the merchant sells the object to the person. -->
          <if>
            <Atom>
              <op><Rel>sell</Rel></op>
              <arg index="1"><Var>merchant</Var></arg>
              <arg index="2"><Var>person</Var></arg>
              <arg index="3"><Var>object</Var></arg>
            </Atom>
          </if>
          <then>
            <Atom>
              <op><Rel>buy</Rel></op>
              <arg index="1"><Var>person</Var></arg>
              <arg index="2"><Var>merchant</Var></arg>
              <arg index="3"><Var>object</Var></arg>
            </Atom>
          </then>
        </Implies>
      </formula>
      <formula>
        <Atom>
          <!-- The third rule is a fact that asserts that
John sells XMLBible to Mary. -->
          <op><Rel>sell</Rel></op>
          <arg index="1"><Ind>John</Ind></arg>
          <arg index="2"><Ind>Mary</Ind></arg>
          <arg index="3"><Ind>XMLBible</Ind></arg>
        </Atom>
      </formula>
      <formula>
        <Atom>
          <!-- The fourth rule is a fact that asserts that
Mary keeps XMLBible.

Observe that this fact is binary - i.e., there are two arguments
for the relation. RDF viewed as a logical knowledge representation
is, likewise, binary, although its arguments have type restrictions,
e.g., the first must be a resource (basically, a URI). -->
          <op><Rel>keep</Rel></op>
          <arg index="1"><Ind>Mary</Ind></arg>
          <arg index="2"><Ind>XMLBible</Ind></arg>
        </Atom>
      </formula>
    </Assert>
  </act>
</RuleML>