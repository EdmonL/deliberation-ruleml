<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://www.ruleml.org/0.91/xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ruleml="http://www.ruleml.org/0.91/xsd">
  <xs:import namespace="http://www.w3.org/2001/XMLSchema-instance" schemaLocation="explicit_datatyping_extension_module.xsd"/>
  <!--
    This module declares or extends the following RuleML elements and attributes:
               * <Rulebase>
               * <formula>
  -->
  <xs:group name="Rulebase-node.choice">
    <xs:annotation>
      <xs:documentation>an extension point for alternate spellings and internationalization of the rulebase tag name.  </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="ruleml:Rulebase"/>
    </xs:sequence>
  </xs:group>
  <xs:element name="Rulebase">
    <xs:annotation>
      <xs:documentation>A collection of rules that can be ordered or unordered, without or with duplicates. 
See http://www.ruleml.org/0.91/glossary/#gloss-Rulebase</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:group ref="ruleml:Rulebase.header"/>
        <xs:group ref="ruleml:Rulebase.main"/>
      </xs:sequence>
      <xs:attributeGroup ref="ruleml:Rulebase.attlist"/>
    </xs:complexType>
  </xs:element>
  <!--
    Rulebase.attlist = mapDirection-att.option & mapMaterial-att.option & mapClosure-att.choice?
    For the declaration of the scope closure attribute pattern, see the quantification closure module (closure_extension_module)
  -->
  <xs:group name="Rulebase.header">
    <xs:annotation>
      <xs:documentation>Rulebases accept the header pattern of general formulas.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:group minOccurs="0" ref="ruleml:Object.header"/>
    </xs:sequence>
  </xs:group>
  <!--
    The object header may be positionally-dependent, 
    see the position-(in)dependence serialization modules (orderstrict_module, orderlax_module).
  -->
  <xs:group name="Rulebase.main">
    <xs:annotation>
      <xs:documentation>Rulebases contain zero or more formulas.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:group minOccurs="0" maxOccurs="unbounded" ref="ruleml:formula_Rulebase-edge.choice"/>
    </xs:sequence>
  </xs:group>
  <xs:group name="formula_Rulebase.edge.def">
    <xs:sequence>
      <xs:element name="formula">
        <xs:annotation>
          <xs:documentation>The formula role of a conjunctive (&lt;And&gt;) or disjunctive (&lt;Or&gt;) expression, 
quantifier (&lt;Forall&gt; or &lt;Exists&gt;), or performative (&lt;Assert&gt;, &lt;Query&gt; or &lt;Retract&gt;).
See http://www.ruleml.org/0.91/glossary/#gloss-formula
Within Rulebase ...</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:group ref="ruleml:formula_Rulebase.content"/>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:group>
  <xs:group name="formula_Rulebase.content">
    <xs:sequence>
      <xs:group ref="ruleml:RulebaseFormula.choice"/>
    </xs:sequence>
  </xs:group>
  <xs:group name="RulebaseFormula.choice">
    <xs:annotation>
      <xs:documentation>formulas allowed to belong to a Rulebase: 
Atomic formulas are allowed in rulebases.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:group ref="ruleml:SimpleFormula-node.choice"/>
    </xs:sequence>
  </xs:group>
  <!--
    For the declaration of the simple formula pattern, see the atomic formula and equation modules ( atom_backbone_module and equal_module) 
    For the declaration of conjunctive and disjunctive formula patterns, see the conjunction and disjunction module (andor_module)
    For the declaration of the strong negation formula pattern, see the strong negation module ( neg_extension_module) 
    For the declaration of the weak negation formula pattern, see the weak negation module ( naf_extension_module) 
    For the declaration of the implication pattern, see the implication modules (implication_module and equivalence_module)
    For the declaration of the quantification patterns, see the quantification module (quantifier_module)
  -->
</xs:schema>
<!--
  
  Optional initialization module allows this module to be independently validated
  include "init_extension_module.rnc"
-->
