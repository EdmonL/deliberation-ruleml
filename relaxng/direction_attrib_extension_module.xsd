<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://www.ruleml.org/0.91/xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ruleml="http://www.ruleml.org/0.91/xsd">
  <xs:import namespace="http://www.w3.org/2001/XMLSchema-instance" schemaLocation="explicit_datatyping_extension_module.xsd"/>
  <!--
    This module declares the following RuleML attribute:
       * @direction
       * @mapDirection
    
  -->
  <xs:attributeGroup name="direction-att.choice">
    <xs:annotation>
      <xs:documentation>an extension point for alternate spellings and internationalization of the inference direction attribute name.  </xs:documentation>
    </xs:annotation>
    <xs:attribute name="direction" type="ruleml:direction.value">
      <xs:annotation>
        <xs:documentation> An attribute indicating the intended direction of an implication rule's (&lt;Implies&gt;) inferencing. 
It has a neutral default value of "bidirectional". Other allowed values are "forward" and "forward".
See http://www.ruleml.org/0.91/glossary/#gloss-@direction</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:attributeGroup name="direction.attrib.def">
    <xs:attribute name="direction" use="required" type="ruleml:direction.value">
      <xs:annotation>
        <xs:documentation> An attribute indicating the intended direction of an implication rule's (&lt;Implies&gt;) inferencing. 
It has a neutral default value of "bidirectional". Other allowed values are "forward" and "forward".
See http://www.ruleml.org/0.91/glossary/#gloss-@direction</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:simpleType name="direction.value">
    <xs:union memberTypes="ruleml:direction_default.value ruleml:direction_non-default.value"/>
  </xs:simpleType>
  <xs:simpleType name="direction_default.value">
    <xs:restriction base="xs:token">
      <xs:enumeration value="bidirectional"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="direction_non-default.value">
    <xs:restriction base="xs:token">
      <xs:enumeration value="forward"/>
      <xs:enumeration value="backward"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:attributeGroup name="mapDirection-att.choice">
    <xs:annotation>
      <xs:documentation>an extension point for alternate spellings and internationalization of the scope inference direction attribute name.  </xs:documentation>
    </xs:annotation>
    <xs:attribute name="mapDirection" type="ruleml:mapDirection.value">
      <xs:annotation>
        <xs:documentation> An attribute indicating the intended direction of implication rule (&lt;Implies&gt;) inferencing of elements 
falling within its scope (i.e. child elements). See attribute mapping for more details. This attribute has a 
neutral default value of "bidirectional". Other allowed values are "forward" and "backward".
See http://www.ruleml.org/0.91/glossary/#gloss-@mapDirection</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:attributeGroup name="mapDirection.attrib.def">
    <xs:attribute name="mapDirection" use="required" type="ruleml:mapDirection.value">
      <xs:annotation>
        <xs:documentation> An attribute indicating the intended direction of implication rule (&lt;Implies&gt;) inferencing of elements 
falling within its scope (i.e. child elements). See attribute mapping for more details. This attribute has a 
neutral default value of "bidirectional". Other allowed values are "forward" and "backward".
See http://www.ruleml.org/0.91/glossary/#gloss-@mapDirection</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:attributeGroup>
  <xs:simpleType name="mapDirection.value">
    <xs:restriction base="ruleml:direction.value"/>
  </xs:simpleType>
  <xs:element name="direction" type="ruleml:direction.content"/>
  <xs:simpleType name="direction.content">
    <xs:restriction base="ruleml:direction.value"/>
  </xs:simpleType>
  <xs:element name="mapDirection" type="ruleml:mapDirection.content"/>
  <xs:simpleType name="mapDirection.content">
    <xs:restriction base="ruleml:mapDirection.value"/>
  </xs:simpleType>
</xs:schema>
