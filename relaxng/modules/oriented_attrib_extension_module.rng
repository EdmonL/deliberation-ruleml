<?xml version="1.0" encoding="UTF-8"?>
<grammar xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" xmlns="http://relaxng.org/ns/structure/1.0">
  <dc:title>RuleML equation orientation attribute</dc:title>
  <dc:version>0.91.01</dc:version>
  <dc:creator>Tara Athan (taraathan AT gmail.com</dc:creator>
  <dc:subject>RuleML, orientation, oriented, equation</dc:subject>
  <dc:description>The auxiliary module for the orientation attribute, used for equations</dc:description>
  <dc:date>2011-04-18</dc:date>
  <dc:language>en</dc:language>
  <dc:rights>TBD</dc:rights>
  <dc:relation>http://wiki.ruleml.org/index.php/Relax_NG</dc:relation>
  <start combine="choice">
    <ref name="oriented.edge.def"/>
  </start>
  <!--
    This module declares the following RuleML elements and attributes:
               * @oriented
    API
    oriented-att.choice
    oriented.value
  -->
  <define name="oriented-att.choice" combine="choice">
    <a:documentation>an extension point for alternate spellings and internationalization of the oriented equation attribute name.  </a:documentation>
    <ref name="oriented.attrib.def"/>
  </define>
  <define name="oriented.attrib.def">
    <attribute name="oriented">
      <a:documentation>An attribute indicating whether an equation (&lt;Equal&gt;) is oriented (directed) or unoriented (symmetric).    
   See http://www.ruleml.org/1.0/glossary/#gloss-@oriented</a:documentation>
      <ref name="oriented.value"/>
    </attribute>
  </define>
  <define name="oriented.value" combine="choice">
    <choice>
      <ref name="oriented_default.value"/>
      <ref name="oriented_non-default.value"/>
    </choice>
  </define>
  <define name="oriented_default.value" combine="choice">
    <notAllowed/>
  </define>
  <define name="oriented_non-default.value" combine="choice">
    <notAllowed/>
  </define>
  <define name="oriented.edge.def">
    <element name="oriented">
      <ref name="oriented.content"/>
    </element>
  </define>
  <define name="oriented.content" combine="choice">
    <ref name="oriented.value"/>
  </define>
</grammar>
