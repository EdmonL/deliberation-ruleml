namespace dc = "http://purl.org/dc/terms/"

dc:title [ "RuleML Disjunctive Logic Schema" ]
dc:version [ "1.02" ]
dc:creator [ "Tara Athan (taraathan AT gmail.com" ]
dc:subject [ "RuleML, disjunctive logic" ]
dc:description [
  "The expansion module for extending the conclusion pattern to include disjunctions."
]
dc:language [ "en" ]
dc:rights [ 'Copyright 2015 RuleML Inc. -- Licensed under the RuleML Specification License, Version 1.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://ruleml.org/licensing/RSL1.0-RuleML. Disclaimer: THIS SPECIFICATION IS PROVIDED "AS IS" AND ANY EXPRESSED OR IMPLIED WARRANTIES, ..., EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. See the License for the specifics governing permissions and limitations under the License.' ]
dc:relation [ "http://deliberation.ruleml.org" ]
start |= notAllowed
# This module extends the choice patterns for conclusions.
#       Or-dis-node.choice

## Disjunctions are allowed in conclusions.
##
Or-head-node.choice |= Or-head.Node.def
Or-head.Node.def =
  
  ## within the head of implications
  element Or { Or-head.type.def }
Or-head.type.def = (Or-datt.choice & reOr.attlist), Or.header, Or-head.main
Or-head.main |= formula_Or-head-edge.choice*
formula_Or-head-edge.choice |= formula_Or-head.edge.def
formula_Or-head.edge.def =
  
  ##
  element formula { formula_Or-head.type.def }
formula_Or-head.type.def = formula_Or-datt.choice &  formula_Or.attlist? & formula_Or-head.content
formula_Or-head.content |= OrHeadFormula.choice
OrHeadFormula.choice |=
  Atom-node.choice
  | Equal-fo-node.choice
  | And-head-node.choice
  | Or-head-node.choice
  | Negation-head-node.choice
  | NegationAsFailure-node.notallowed
  | Implication-head-node.choice
  | Forall-head-node.choice
  | Exists-head-node.choice
