namespace dc = "http://purl.org/dc/elements/1.1/"
namespace dcterms = "http://purl.org/dc/terms/"


dc:title [ "RuleML Basic Terms" ]
dc:version [ "1.0.01" ]
dc:creator [ "Tara Athan (taraathan AT gmail.com" ]
dc:subject [ "RuleML, constant, SWSL" ]
dc:description [ "The expansion module for SWSL constants." ]
dc:date [ "2011-10-06" ]
dc:language [ "en" ]
dcterms:rights [ "LGPL-3.0" ] 
dc:relation [ "http://wiki.ruleml.org/index.php/Relax_NG" ]
start |= Const.Node.def
Node.choice |= Const.Node.def
# 
# This module declares the following RuleML elements, attributes and patterns:
#            * <Const>
# This module also declares the following RuleML choice patterns:
## To implement, need to
## 1. split individual_module into two modules, one for Ind, the other for arg and the term patterns
## 2. split atom_module into two modules, one for Rel, the other for everything else
## 3. split expr_module into two modules, one for Fun, the other for everything else
## Then, we can include this module instead of Ind, Rel and Fun to unify those elements into Const.
##  
Individual-node.choice |= Const.Node.def
Relation-node.choice |= Const.Node.def
Function-node.choice |= Const.Node.def
## A constant that may serve as a term, relation or functional operator, as in Hilog, which can also be considered to be a fixed argument like RDF resources.
Const.Node.def =
  
  ## <Const>: an individual constant. See 
  ## http://www.ruleml.org/1.0/glossary/#gloss-Const
  element Const { (Const-datt.choice & reConst.attlist), Const.content }

## Individuals optionally accept the attribute patterns of resources, and objects with user-defined types.
reConst.attlist &= Resource.attlist?
reConst.attlist &= Type.attlist?
# For the declaration of the attribute list for resources, see the iri modules (uri_module).
# For the declaration of the attribute list for objects with user-defined types, see the type module (type_module). 

## The content model for individuals is text.
Const.content |= text

Const-datt.choice &= empty
