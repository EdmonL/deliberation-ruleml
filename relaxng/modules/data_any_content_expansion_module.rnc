namespace dc = "http://purl.org/dc/elements/1.1/"
namespace dcterms = "http://purl.org/dc/terms/"
namespace xs = "http://www.w3.org/2001/XMLSchema"
namespace xsi = "http://www.w3.org/2001/XMLSchema-instance"

dc:title [ "RuleML Data Element, Any Content" ]
dc:version [ "1.02" ]
dc:creator [ "Tara Athan (taraathan AT gmail.com" ]
dc:subject [ "RuleML, Data" ]
dc:description [
  "The expansion module for mixed-type Data element, a Type (Object) for literal constants and structure data from any namespace."
]
dc:language [ "en" ]
dcterms:rights [ "TBD" ]
dc:relation [ "http://wiki.ruleml.org/index.php/Relax_NG" ]
start |= Data_any.Node.def
Node.choice |= Data_any.Node.def
# This module declares the following RuleML elements, attributes and patterns:
#            * <Data>

## an extension point for specializations of the data tag name.  
Data_any-node.choice |= Data_any.Node.def

## A fixed argument like RDF literals.
## Data may have mixed content with any elements interleaved with text.
## Explicit datatyping of xs:anyType is implemented in the explicit datatyping module.
Data_any.Node.def =
  
  ## <Data>: May contain arbitrary simple or complex content. See 
  ## http://ruleml.org/1.02/glossary/#gloss-Data
  element Data { Data_any.type.def }
Data_any.type.def = (Data-datt.choice & reData.attlist) & text & anyElement.def*
reData.attlist &= commonNode.attlist?

##
anyElement.choice |= anyElement.def
anyElement.def =
  element * {
    attribute * { text }*,
    (text & anyElement.def*)
  }
