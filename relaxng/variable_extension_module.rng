<?xml version="1.0" encoding="UTF-8"?>
<grammar xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" xmlns="http://relaxng.org/ns/structure/1.0">
  <dc:title>RuleML Variables</dc:title>
  <dc:version>0.91.01</dc:version>
  <dc:creator>Tara Athan (taraathan AT gmail.com</dc:creator>
  <dc:subject>RuleML, variables, interpretable names</dc:subject>
  <dc:description>The auxiliary module for variables.</dc:description>
  <dc:date>2011-04-21</dc:date>
  <dc:language>en</dc:language>
  <dc:rights>TBD</dc:rights>
  <dc:relation>http://wiki.ruleml.org/index.php/Relax_NG</dc:relation>
  <start combine="choice">
    <ref name="Var.Node.def"/>
  </start>
  <!--
    This module declares the following RuleML elements and attributes:
               * <Var>
  -->
  <define name="SimpleQuantifiableTerm.choice" combine="choice">
    <a:documentation>terms that can be bound by a quantifier include variables.</a:documentation>
    <ref name="Variable-node.choice"/>
  </define>
  <define name="Variable-node.choice" combine="choice">
    <a:documentation>an extension point for alternate spellings and internationalization of the variable tag name. </a:documentation>
    <ref name="Var.Node.def"/>
  </define>
  <define name="Var.Node.def">
    <element name="Var">
      <a:documentation>A logical variable, as in logic programming.
See http://www.ruleml.org/0.91/glossary/#gloss-Var</a:documentation>
      <ref name="Var.attlist"/>
      <ref name="Var.content"/>
    </element>
  </define>
  <define name="Var.attlist" combine="interleave">
    <a:documentation>Variables optionally accept the attribute pattern of objects with user-defined types.</a:documentation>
    <optional>
      <ref name="Type.attlist"/>
    </optional>
  </define>
  <define name="Var.content" combine="choice">
    <a:documentation>The content model for variables is text.</a:documentation>
    <text/>
  </define>
  <define name="Node.choice" combine="choice">
    <ref name="Var.Node.def"/>
  </define>
</grammar>
<!--
  
  Optional initialization module allows this module to be independently validated
  include "init_extension_module.rnc"
-->
