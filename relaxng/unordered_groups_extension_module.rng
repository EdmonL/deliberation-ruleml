<?xml version="1.0" encoding="UTF-8"?>
<grammar xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://relaxng.org/ns/structure/1.0">
  <dc:title>RuleML Positional Independence</dc:title>
  <dc:version>0.91.01</dc:version>
  <dc:creator>Tara Athan (taraathan AT gmail.com</dc:creator>
  <dc:subject>RuleML, positional independence</dc:subject>
  <dc:description>The auxiliary module for positional independence.</dc:description>
  <dc:date>2011-05-10</dc:date>
  <dc:language>en</dc:language>
  <dc:rights>TBD</dc:rights>
  <dc:relation>http://wiki.ruleml.org/index.php/Relax_NG</dc:relation>
  <start combine="choice">
    <notAllowed/>
  </start>
  <define name="Atom.main" combine="choice">
    <a:documentation>Pre-fix operator notation for atomic formulas is optional in a relaxed-form serialization.
This pattern cannot be translated accurately into XSD.</a:documentation>
    <interleave>
      <ref name="operatorForAtoms-edge.choice"/>
      <ref name="argumentsForAtoms.sequence"/>
    </interleave>
  </define>
  <define name="argumentsForAtoms.sequence" combine="choice">
    <interleave>
      <ref name="positionalArgumentsForAtoms.sequence"/>
      <ref name="slotsForAtoms.sequence"/>
    </interleave>
  </define>
  <define name="positionalArgumentsForAtoms.sequence" combine="choice">
    <interleave>
      <ref name="termsForAtoms.sequence"/>
      <optional>
        <ref name="restOfPositionalArguments-edge.choice"/>
      </optional>
    </interleave>
  </define>
  <define name="termsForAtoms.sequence" combine="choice">
    <optional>
      <ref name="termsPlus.sequence"/>
    </optional>
  </define>
  <define name="slotsForAtoms.sequence" combine="choice">
    <interleave>
      <ref name="slotTermsForAtoms.sequence"/>
      <optional>
        <ref name="restOfSlots-edge.choice"/>
      </optional>
    </interleave>
  </define>
  <define name="Expr.main" combine="choice">
    <a:documentation>Pre-fix operator notation for expressions is optional in the relaxed-form serialization.
This pattern cannot be translated accurately into XSD.</a:documentation>
    <interleave>
      <ref name="operatorForExpressions-edge.choice"/>
      <ref name="argumentsForExpressions.sequence"/>
    </interleave>
  </define>
  <define name="argumentsForExpressions.sequence" combine="choice">
    <interleave>
      <ref name="positionalArgumentsForExpressions.sequence"/>
      <ref name="slotsForExpressions.sequence"/>
    </interleave>
  </define>
  <define name="positionalArgumentsForExpressions.sequence" combine="choice">
    <interleave>
      <ref name="termsForExpressions.sequence"/>
      <optional>
        <ref name="restOfPositionalArguments-edge.choice"/>
      </optional>
    </interleave>
  </define>
  <define name="termsForExpressions.sequence" combine="choice">
    <optional>
      <ref name="termsPlus.sequence"/>
    </optional>
  </define>
  <define name="slotsForExpressions.sequence" combine="choice">
    <interleave>
      <ref name="slotTermsForExpressions.sequence"/>
      <optional>
        <ref name="restOfSlots-edge.choice"/>
      </optional>
    </interleave>
  </define>
  <!---->
  <define name="Implies.main" combine="choice">
    <a:documentation>In the relaxed-form serialization, the body and head of an implication can occur in either order if striped.
This pattern can be translated accurately into XSD.</a:documentation>
    <interleave>
      <ref name="body_Implies.name.choice"/>
      <ref name="head_Implies.name.choice"/>
    </interleave>
  </define>
  <define name="Entails.main" combine="choice">
    <a:documentation>In the lax-order serialization, the body and head of a proof-theoretic entailment can occur in either order if striped.
This pattern can be translated accurately into XSD.</a:documentation>
    <interleave>
      <ref name="body_Entails.name.choice"/>
      <ref name="head_Entails.name.choice"/>
    </interleave>
  </define>
  <define name="FuzzyFormula-header.choice" combine="choice">
    <a:documentation>In the lax-order serialization, the object identifier occupies any position in the header of fuzzifiable formulas.
This pattern can be translated accurately into XSD using xs:any, but is not correctly translated by the Trang software.
The header for fuzzifiable formulas interleaves the patterns for general formulas and fuzzifiable objects.</a:documentation>
    <interleave>
      <ref name="Formula.header"/>
      <ref name="Fuzzy.header"/>
    </interleave>
  </define>
  <!--
    
    
    STRIPE-SKIPPING AND POSITIONAL-DNDEPENDENCE
    RELAX NG ENHANCEMENT
  -->
  <define name="Implies.main" combine="choice">
    <a:documentation>non-linear interaction of stripe-skipping and lax-order
allows asynchronous stripe-skipping and body-head order reversal</a:documentation>
    <ref name="head_Implies-ss.content"/>
    <ref name="body_Implies.name.choice"/>
  </define>
  <define name="Implies.main" combine="choice">
    <ref name="head_Implies.name.choice"/>
    <ref name="body_Implies-ss.content"/>
  </define>
  <!---->
  <define name="Entails.main" combine="choice">
    <a:documentation>non-linear interaction of stripe-skipping and lax-order
allows asynchronous stripe-skipping and body-head order reversal</a:documentation>
    <ref name="head_Entails-ss.content"/>
    <ref name="body_Entails.name.choice"/>
  </define>
  <define name="Entails.main" combine="choice">
    <ref name="head_Entails.name.choice"/>
    <ref name="body_Entails-ss.content"/>
  </define>
</grammar>
<!--
  
  Optional initialization module allows this module to be independently validated
  include "init_extension_module.rnc"
-->
