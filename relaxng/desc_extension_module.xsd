<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://www.ruleml.org/0.91/xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ruleml="http://www.ruleml.org/0.91/xsd">
  <xs:import namespace="http://www.w3.org/2001/XMLSchema-instance" schemaLocation="explicit_datatyping_extension_module.xsd"/>
  <xs:group name="objectIdentifier-edge.choice">
    <xs:annotation>
      <xs:documentation>an extension point for stripe skipping as well as alternate spellings and internationalization of the object identifier tag name.  </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="ruleml:oid"/>
    </xs:sequence>
  </xs:group>
  <xs:element name="oid" type="ruleml:oid.content">
    <xs:annotation>
      <xs:documentation>An optional label for a clause, creating accessibility within the knowledge representation. 
This can help for representing prioritization between rules, for example. 
All type tags (i.e. those that begin with an uppercase letter) of RuleML can begin with 
such a label except those that permit only character data (e.g. &lt;Ind&gt;, &lt;Rel&gt;, etc.). 
Note that oids are not required to be unique within a rulebase.
See http://www.ruleml.org/0.91/glossary/#gloss-oid</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="oid.content">
    <xs:annotation>
      <xs:documentation>The object descriptor content model consists of any single term.
Note: this corrects an error in the oid content model of RuleML 0.91,
where Var is allowed in oid in bindatagroundlog and bindatagroundfact.</xs:documentation>
    </xs:annotation>
    <xs:group ref="ruleml:AnyTerm.choice"/>
  </xs:complexType>
  <!--
    For the declaration of the term patterns, see the term module (individual_extension_module)
    
  -->
</xs:schema>
<!--
  Optional initialization module allows this module to be independently validated
  include "init_extension_module.rnc"
-->
